---

const navItems = [
  { text: 'Home', href: '/' },
  { text: 'Features', href: '/features' },
  { text: 'Documentation', href: '/documentation' },
  { text: 'Installation', href: '/installation' },
  { text: 'Lumo Code', href: '/code', comingSoon: true },
  { text: 'GitHub', href: 'https://github.com/agnath18K/lumo', external: true }
];

// Determine if the current page is active
const pathname = Astro.url.pathname;
const isActive = (href: string) => {
  if (href === '/') {
    return pathname === href;
  }
  return pathname.startsWith(href);
};
---

<header class="fixed w-full bg-white/90 dark:bg-terminal-dark/90 backdrop-blur-md z-50 border-b border-gray-200 dark:border-gray-800">
  <div class="container">
    <div class="flex items-center justify-between h-14 sm:h-16">
      <!-- Logo -->
      <a href="/" class="flex items-center gap-1.5 sm:gap-2">
        <div class="w-7 h-7 sm:w-8 sm:h-8 rounded-md bg-white dark:bg-gray-800 flex items-center justify-center overflow-hidden border-2 dark:border-gray-800 shadow-sm">
          <img src="/bird.png" alt="Bird logo" class="w-5 h-5 sm:w-6 sm:h-6 object-contain" />
        </div>
        <span class="text-lg sm:text-xl font-bold">Lumo CLI</span>
      </a>

      <!-- Desktop Navigation -->
      <nav class="hidden md:flex items-center gap-1">
        {navItems.map(item => (
          <a
            href={item.href}
            class={`px-2.5 sm:px-3 py-2 rounded-md text-sm font-medium transition-colors ${
              isActive(item.href)
                ? 'bg-primary-50 text-primary-700 dark:bg-primary-900/20 dark:text-primary-300'
                : 'text-gray-700 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-800'
            } ${item.comingSoon ? 'relative' : ''}`}
            target={item.external ? '_blank' : undefined}
            rel={item.external ? 'noopener noreferrer' : undefined}
          >
            {item.text}
            {item.comingSoon && (
              <span class="absolute -top-1 -right-1 h-2 w-2 bg-primary-500 rounded-full animate-pulse-slow"></span>
            )}
          </a>
        ))}
      </nav>

      <div class="flex items-center gap-1">
        <!-- Mobile Menu Button -->
        <button
          id="mobile-menu-button"
          class="md:hidden p-2 rounded-md text-gray-700 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-800 min-h-[40px] min-w-[40px]"
          aria-label="Toggle menu"
        >
          <svg class="h-5 w-5 sm:h-6 sm:w-6" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>

        <!-- Theme Toggle -->
        <button
          id="theme-toggle"
          class="p-2 rounded-md text-gray-700 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-800 min-h-[40px] min-w-[40px]"
          aria-label="Toggle theme"
        >
          <!-- Sun icon for dark mode -->
          <svg class="h-5 w-5 dark:block hidden text-primary-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
            <path d="M12 2.25a.75.75 0 01.75.75v2.25a.75.75 0 01-1.5 0V3a.75.75 0 01.75-.75zM7.5 12a4.5 4.5 0 119 0 4.5 4.5 0 01-9 0zM18.894 6.166a.75.75 0 00-1.06-1.06l-1.591 1.59a.75.75 0 101.06 1.061l1.591-1.59zM21.75 12a.75.75 0 01-.75.75h-2.25a.75.75 0 010-1.5H21a.75.75 0 01.75.75zM17.834 18.894a.75.75 0 001.06-1.06l-1.59-1.591a.75.75 0 10-1.061 1.06l1.59 1.591zM12 18a.75.75 0 01.75.75V21a.75.75 0 01-1.5 0v-2.25A.75.75 0 0112 18zM7.758 17.303a.75.75 0 00-1.061-1.06l-1.591 1.59a.75.75 0 001.06 1.061l1.591-1.59zM6 12a.75.75 0 01-.75.75H3a.75.75 0 010-1.5h2.25A.75.75 0 016 12zM6.697 7.757a.75.75 0 001.06-1.06l-1.59-1.591a.75.75 0 00-1.061 1.06l1.59 1.591z" />
          </svg>
          <!-- Moon icon for light mode -->
          <svg class="h-5 w-5 dark:hidden block text-primary-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
            <path fill-rule="evenodd" d="M9.528 1.718a.75.75 0 01.162.819A8.97 8.97 0 009 6a9 9 0 009 9 8.97 8.97 0 003.463-.69.75.75 0 01.981.98 10.503 10.503 0 01-9.694 6.46c-5.799 0-10.5-4.701-10.5-10.5 0-4.368 2.667-8.112 6.46-9.694a.75.75 0 01.818.162z" clip-rule="evenodd" />
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile Navigation -->
  <div id="mobile-menu" class="md:hidden hidden bg-white/95 dark:bg-terminal-dark/95 backdrop-blur-md border-b border-gray-200 dark:border-gray-800">
    <div class="container py-2 sm:py-3 space-y-0.5 sm:space-y-1 max-h-[calc(100vh-3.5rem)] overflow-y-auto">
      {navItems.map(item => (
        <a
          href={item.href}
          class={`block px-3 py-2.5 rounded-md text-sm sm:text-base font-medium ${
            isActive(item.href)
              ? 'bg-primary-50 text-primary-700 dark:bg-primary-900/20 dark:text-primary-300'
              : 'text-gray-700 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-800'
          } ${item.comingSoon ? 'relative' : ''}`}
          target={item.external ? '_blank' : undefined}
          rel={item.external ? 'noopener noreferrer' : undefined}
        >
          {item.text}
          {item.comingSoon && (
            <span class="inline-block ml-2 h-2 w-2 bg-primary-500 rounded-full animate-pulse-slow"></span>
          )}
        </a>
      ))}
    </div>
  </div>
</header>

<script>
  // Mobile menu toggle
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');

  if (mobileMenuButton && mobileMenu) {
    mobileMenuButton.addEventListener('click', () => {
      mobileMenu.classList.toggle('hidden');
    });
  }

  // Theme toggle
  const themeToggle = document.getElementById('theme-toggle');

  if (themeToggle) {
    themeToggle.addEventListener('click', () => {
      document.documentElement.classList.toggle('dark');

      // Save preference to localStorage
      const isDark = document.documentElement.classList.contains('dark');
      localStorage.setItem('theme', isDark ? 'dark' : 'light');
    });

    // Check for saved theme preference or use system preference
    const savedTheme = localStorage.getItem('theme');
    const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;

    if (savedTheme === 'dark' || (!savedTheme && systemPrefersDark)) {
      document.documentElement.classList.add('dark');
    }
  }
</script>
